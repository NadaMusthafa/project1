name: Nodeapp CI

on:
 [push,pull_request]
   
env:
  NODE_VERSION: '16.x'                                             # set this to the node version to use

jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
            
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
       
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('nodeapp/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
       
    - name: Install NodeApp dependencies
      run: npm install
      working-directory: ./nodeapp
         
    #- name: Do Code Analysis NodeApp
    #  run: echo "Do code analysis here..."
      
    #- name: Upload coverage to Codecov
    #  uses: codecov/codecov-action@v1
    #  with:
    #    name: codeanalysis_coverage_node
    #    directory: ./nodeapp/codecoverage
      
    - name: Run Tests
      run: npm run test
      id: test
      working-directory: ./nodeapp
      continue-on-error: true

    - name: Deploy Test Report to GitHub Page
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.SEMANTIC_TOKEN1 }}
        publish_dir: ./nodeapp/testreports
        publish_branch: gh-pages
    
    - name: Create Issue (If Test Fail)
      if: steps.test.outcome != 'success'
      uses: nashmaniac/create-issue-action@v1.1
      with:
        title: Automated Issue
        token: ${{secrets.SEMANTIC_TOKEN1}}
        assignees: ${{github.actor}}
        labels: test-failed
        body:  '[Test Failed Report is out.](https://freelearn2000.github.io/Project1/index.html)'
        
    - name: Report Status
      if: always()
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.steps.test.status }} 
        notification_title: '{workflow} has {status_message}'
        message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>'
        footer: 'Linked to Repo <{repo_url}|{repo}>'
        
      env:
       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      
    # - name: Add test coverage
    #   run: npm run coverage
    #   working-directory: ./nodeapp
      
    # - name: Upload Test coverage
    #   run: npm run test:coverage
    #   working-directory: ./nodeapp
        
    #- name: Create Issue Action
    #  if: ${{ coverage<80 }} # only run codecoverage lessthan 80
    #  uses: nashmaniac/create-issue-action@v1.1
    #  with:
    #     title: Code coverage less than 80%
    #     token: ${{secrets.GITHUB_TOKEN}}
    #     assignees: ${{github.actor}}
    #     labels: refactoring-needed, help needed
    #     body: codecoverage ${{github.sha}}
     
        
    #- name: Build project Node
    #  run: npm run build 
    #  working-directory: ./nodeapp

    #- name: Upload React Build folder as Artifact
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: Build
    #     path: ./nodeapp/build
       
       
    - name: echo-default-env-variables
      run: |
          echo "Home: ${HOME}"
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "ISSUE: ${{ github.event.issue.html_url }}"
