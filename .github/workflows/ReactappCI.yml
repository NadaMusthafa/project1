name: React App CI

on:
  pull_request:
   branches: [develop, master]
   paths:
      - 'reactapp/**'
      - '.github/workflows/ReactappCI.yml'

env:
  NODE_VERSION: '16.x'

jobs:

  Job1-ReactApp:
    name: React App
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: reactapp
 
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2
            
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
       
    - name: Install App dependencies
      run: npm ci
      
    - name: Code analysis
      id: lint
      run: npm run lint
      
    - name: Run Unit Tests
      id: test
      run: | 
           npm test
           npm run test:report
      env:
        CI: true
         
    #- name: Run Tests Coverage
    # id: coverage
    # if: always()
    #  run: npm run coverage:report
    # env:
    #    CI: true

    - name: Deploy Unit Test Report/Coverage/Lint to GitHub Page
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.SEMANTIC_TOKEN1 }}
        publish_dir: ./reactapp/reports
        publish_branch: gh-pages
        destination_dir: ./reactapp
    

    - name: Create Issue (If Test/Coverage/lint Fail)
      if: ${{ always() && (steps.test.outcome == 'failure' || steps.coverage.outcome == 'failure' || steps.lint.outcome == 'failure') }}
      uses: JasonEtco/create-an-issue@v2
      env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_TOKEN1 }}
          TITLE: React App Tests/Coverage Failed
          TEST_REPORT_URL: https://freelearn2000.github.io/Project1/reactapp/index.html)
          COVERAGE_REPORT_URL: https://freelearn2000.github.io/Project1/reactapp/coverage/lcov-report/index.html
          LINT_REPORT_URL: https://freelearn2000.github.io/Project1/reactapp/reports/lint-results.html
      with:
        assignees: ${{github.actor}}  
        
    - name: Send Error messge to  Slack
      if: ${{ always() && (steps.test.outcome == 'failure' || steps.coverage.outcome == 'failure' || steps.lint.outcome == 'failure') }}
      uses: slackapi/slack-github-action@v1.18.0
      with:
         payload: |
           {
             "blocks": [
               {
                 "type": "section",
                 "text": {
                   "type": "mrkdwn",
                   "text": "*Test result: `${{ steps.test.outcome }}`*\n *Test Report : * <https://freelearn2000.github.io/${{ github.event.repository.name }}>\n>*REPO : * ${{ github.event.repository.name }} \n>*WORKFLOW : * ${{github.workflow}} \n>*RUN URL: * <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}> \n> *GITHUB ACTOR:* ${{github.actor}}"
                 }
               }
             ]
           }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      
    - name: Build project react
      id: build
      if: ${{ always() && (steps.test.outcome == 'success' ) }}
      run: npm run build
        
    - name: Upload React Build folder as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Build
        path: ./reactapp/build
        
    - name: Azure login
      if: ${{ always() && (steps.build.outcome == 'success' ) }}
      uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Upload to Azure blob storage
      uses: azure/CLI@v1
      with:
        azcliversion: 2.0.72
        inlineScript: |
            az storage blob upload-batch --account-name craazstoragedemo48765 -d '$web' -s ./production-files
    
    - name: Azure logout
      run: |
            az logout    

